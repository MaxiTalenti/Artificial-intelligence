 Prueba 0 : breadth_first con el rey en (5, 3) y control de estados repetidos en True
{'visited_nodes': 41, 'iterations': 41, 'max_fringe_size': 9}
     meta: (0, 7)
     camino: [(None, (5, 3)), (('Arriba', (-1, 0)), (4, 3)), (('Arriba', (-1, 0)), (3, 3)), (('Arriba', (-1, 0)), (2, 3)), (('Derecha', (0, 1)), (2, 4)), (('Derecha', (0, 1)), (2, 5)), (('Arriba', (-1, 0)), (1, 5)), (('Derecha', (0, 1)), (1, 6)), (('Derecha', (0, 1)), (1, 7)), (('Arriba', (-1, 0)), (0, 7))]
  Prueba 1 : depth_first con el rey en (5, 3) y control de estados repetidos en True
{'visited_nodes': 17, 'iterations': 17, 'max_fringe_size': 8}
     meta: (9, 8)
     camino: [(None, (5, 3)), (('Izquierda', (0, -1)), (5, 2)), (('Izquierda', (0, -1)), (5, 1)), (('Abajo', (1, 0)), (6, 1)), (('Abajo', (1, 0)), (7, 1)), (('Derecha', (0, 1)), (7, 2)), (('Derecha', (0, 1)), (7, 3)), (('Derecha', (0, 1)), (7, 4)), (('Derecha', (0, 1)), (7, 5)), (('Derecha', (0, 1)), (7, 6)), (('Arriba', (-1, 0)), (6, 6)), (('Derecha', (0, 1)), (6, 7)), (('Derecha', (0, 1)), (6, 8)), (('Abajo', (1, 0)), (7, 8)), (('Abajo', (1, 0)), (8, 8)), (('Abajo', (1, 0)), (9, 8))]
  Prueba 2 : greedy con el rey en (5, 3) y control de estados repetidos en True
{'visited_nodes': 25, 'iterations': 25, 'max_fringe_size': 10}
     meta: (0, 7)
     camino: [(None, (5, 3)), (('Izquierda', (0, -1)), (5, 2)), (('Arriba', (-1, 0)), (4, 2)), (('Arriba', (-1, 0)), (3, 2)), (('Arriba', (-1, 0)), (2, 2)), (('Derecha', (0, 1)), (2, 3)), (('Derecha', (0, 1)), (2, 4)), (('Derecha', (0, 1)), (2, 5)), (('Arriba', (-1, 0)), (1, 5)), (('Derecha', (0, 1)), (1, 6)), (('Derecha', (0, 1)), (1, 7)), (('Arriba', (-1, 0)), (0, 7))]
  Prueba 3 : astar con el rey en (5, 3) y control de estados repetidos en False
{'visited_nodes': 1915, 'iterations': 1915, 'max_fringe_size': 3996}
     meta: (0, 7)
     camino: [(None, (5, 3)), (('Arriba', (-1, 0)), (4, 3)), (('Arriba', (-1, 0)), (3, 3)), (('Derecha', (0, 1)), (3, 4)), (('Derecha', (0, 1)), (3, 5)), (('Arriba', (-1, 0)), (2, 5)), (('Arriba', (-1, 0)), (1, 5)), (('Derecha', (0, 1)), (1, 6)), (('Derecha', (0, 1)), (1, 7)), (('Arriba', (-1, 0)), (0, 7))]
  Prueba 4 : astar con el rey en (5, 3) y control de estados repetidos en True
{'visited_nodes': 39, 'iterations': 39, 'max_fringe_size': 6}
     meta: (2, 9)
     camino: [(None, (5, 3)), (('Arriba', (-1, 0)), (4, 3)), (('Arriba', (-1, 0)), (3, 3)), (('Arriba', (-1, 0)), (2, 3)), (('Derecha', (0, 1)), (2, 4)), (('Derecha', (0, 1)), (2, 5)), (('Derecha', (0, 1)), (2, 6)), (('Derecha', (0, 1)), (2, 7)), (('Derecha', (0, 1)), (2, 8)), (('Derecha', (0, 1)), (2, 9))]
 Prueba 5 : breadth_first con el rey en (5, 3) y control de estados repetidos en False
{'visited_nodes': 20917, 'iterations': 20917, 'max_fringe_size': 45658}
     meta: (0, 7)
     camino: [(None, (5, 3)), (('Arriba', (-1, 0)), (4, 3)), (('Arriba', (-1, 0)), (3, 3)), (('Arriba', (-1, 0)), (2, 3)), (('Derecha', (0, 1)), (2, 4)), (('Derecha', (0, 1)), (2, 5)), (('Arriba', (-1, 0)), (1, 5)), (('Derecha', (0, 1)), (1, 6)), (('Derecha', (0, 1)), (1, 7)), (('Arriba', (-1, 0)), (0, 7))]
